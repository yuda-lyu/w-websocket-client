/*!
 * w-websocket-client v1.0.17
 * (c) 2018-2019 yuda-lyu(semisphere)
 * Released under the MIT License.
 */
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o(require("ws")):"function"==typeof define&&define.amd?define(["ws"],o):(e=e||self)["w-websocket-client"]=o(e.ws)}(this,(function(e){"use strict";function o(e){var o=Object.prototype.toString.call(e);return"[object Function]"===o||"[object AsyncFunction]"===o}return e=e&&e.hasOwnProperty("default")?e.default:e,function(n){var r=null;n.url||(n.url="ws://localhost:8080"),n.token||(n.token="*");var t,s=function(){var e="undefined"!=typeof window&&void 0!==window.document,o="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope;return{isBrowser:e=e||o,isWebWorker:o,isNode:"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}}().isBrowser;t=s?("undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:null).WebSocket:e;try{r=new t(n.url+"/?token="+n.token)}catch(e){r=null}if(null===r)return{error:"can not new MixWS"};function i(){o(n.open)&&n.open()}function l(){o(n.close)&&n.close()}function u(e){o(n.message)&&n.message(e)}function c(e){o(n.error)&&n.error(e),r.close()}return s?(r.onopen=i,r.onmessage=function(e){u(e.data)},r.onclose=l,r.onerror=c):(r.on("open",i),r.on("message",u),r.on("close",l),r.on("error",c)),r}}));
//# sourceMappingURL=w-websocket-client.umd.js.map

/*!
 * w-websocket-client v1.0.29
 * (c) 2018-2021 yuda-lyu(semisphere)
 * Released under the MIT License.
 */
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o(require("ws")):"function"==typeof define&&define.amd?define(["ws"],o):(e="undefined"!=typeof globalThis?globalThis:e||self)["w-websocket-client"]=o(e.ws)}(this,(function(e){"use strict";function o(){return"undefined"!=typeof window&&void 0!==window.document}function n(e){let o=Object.prototype.toString.call(e);return"[object Function]"===o||"[object AsyncFunction]"===o}return function(t){let r=null;t.url||(t.url="ws://localhost:8080"),t.token||(t.token="*");let s,l=function(){let e=o(),n="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope;return e=e||n,{isBrowser:e,isWebWorker:n,isNode:"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}}().isBrowser;s=l?("undefined"!=typeof self?self:o()?window:"undefined"!=typeof global?global:null).WebSocket:e;try{r=new s(t.url+"/?token="+t.token)}catch(e){r=null}if(null===r)return{error:"can not new MixWS"};function i(){n(t.open)&&t.open()}function u(){n(t.close)&&t.close()}function c(e){n(t.message)&&t.message(e)}function f(e){n(t.error)&&t.error(e),r.close()}return l?(r.onopen=i,r.onmessage=function(e){c(e.data)},r.onclose=u,r.onerror=f):(r.on("open",i),r.on("message",c),r.on("close",u),r.on("error",f)),r}}));
//# sourceMappingURL=w-websocket-client.umd.js.map

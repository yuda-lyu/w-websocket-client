/*!
 * w-websocket-client v1.0.20
 * (c) 2018-2019 yuda-lyu(semisphere)
 * Released under the MIT License.
 */
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o(require("ws")):"function"==typeof define&&define.amd?define(["ws"],o):(e=e||self)["w-websocket-client"]=o(e.ws)}(this,(function(e){"use strict";function o(e){var o=Object.prototype.toString.call(e);return"[object Function]"===o||"[object AsyncFunction]"===o}return e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,function(n){var t=null;n.url||(n.url="ws://localhost:8080"),n.token||(n.token="*");var r,s=function(){var e="undefined"!=typeof window&&void 0!==window.document,o="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope;return{isBrowser:e=e||o,isWebWorker:o,isNode:"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}}().isBrowser;r=s?("undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:null).WebSocket:e;try{t=new r(n.url+"/?token="+n.token)}catch(e){t=null}if(null===t)return{error:"can not new MixWS"};function l(){o(n.open)&&n.open()}function i(){o(n.close)&&n.close()}function c(e){o(n.message)&&n.message(e)}function u(e){o(n.error)&&n.error(e),t.close()}return s?(t.onopen=l,t.onmessage=function(e){c(e.data)},t.onclose=i,t.onerror=u):(t.on("open",l),t.on("message",c),t.on("close",i),t.on("error",u)),t}}));
//# sourceMappingURL=w-websocket-client.umd.js.map

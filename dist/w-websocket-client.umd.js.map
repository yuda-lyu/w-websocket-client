{"version":3,"file":"w-websocket-client.umd.js","sources":["../node_modules/wsemi/src/isfun.mjs","../src/WWebsocketClient.mjs"],"sourcesContent":["/**\r\n * 判斷是否為函數\r\n *\r\n * Unit Test: {@link https://github.com/yuda-lyu/wsemi/blob/master/test/isfun.test.js Github}\r\n * @memberOf wsemi\r\n * @param {*} v 輸入任意資料\r\n * @returns {Boolean} 回傳判斷布林值\r\n * @example\r\n * isfun('1.25')\r\n * // => false\r\n *\r\n * isfun(function() {})\r\n * // => true\r\n */\r\nfunction isfun(v) {\r\n\r\n    let c = Object.prototype.toString.call(v)\r\n    return c === '[object Function]' || c === '[object AsyncFunction]'\r\n}\r\n\r\n\r\nexport default isfun\r\n","import WS from 'ws'\r\nimport isfun from 'wsemi/src/isfun.mjs'\r\n\r\n\r\n/**\r\n * 建立WebSocket使用者(Node.js與Browser)端物件\r\n *\r\n * @param {Object} opt 輸入設定參數物件\r\n * @param {String} [opt.url='ws://localhost:8080'] 輸入WebSocket伺服器ws網址，預設為'ws://localhost:8080'\r\n * @param {String} [opt.token='*'] 輸入使用者認證用token，預設為'*'\r\n * @param {Function} opt.open 輸入監聽open函數\r\n * @param {Function} opt.close 輸入監聽close函數\r\n * @param {Function} opt.message 輸入監聽message函數\r\n * @param {Function} opt.error 輸入監聽error函數\r\n * @returns {Promise} 回傳Promise，resolve為回傳連接成功的Websocket物件，reject回傳為無法連接\r\n * @example\r\n *\r\n * import WSC from 'w-websocket-client/dist/w-websocket-client.umd.js'\r\n *\r\n * //opt\r\n * let opt = {\r\n *     url: 'ws://localhost:8080',\r\n *     token: '*',\r\n *     open: function() {\r\n *         console.log('client: open')\r\n *     },\r\n *     close: function() {\r\n *         console.log('client: close')\r\n *     },\r\n *     message: function(data) {\r\n *         console.log('client: message', data)\r\n *     },\r\n *     error: function(err) {\r\n *         console.log('client: error:', err)\r\n *     },\r\n * }\r\n *\r\n * //wsc\r\n * let wsc = null\r\n * new WSC(opt)\r\n *     .then(function(w){\r\n *\r\n *         //save\r\n *         wsc = w\r\n *\r\n *         //send\r\n *         let data = 'abc'\r\n *         wsc.send(data)\r\n *\r\n *     })\r\n *\r\n *\r\n */\r\nfunction WWebsocketClient(opt) {\r\n    let wsc = null //WebSocket\r\n\r\n\r\n    //default\r\n    if (!opt.url) {\r\n        opt.url = 'ws://localhost:8080'\r\n    }\r\n    if (!opt.token) {\r\n        opt.token = '*'\r\n    }\r\n\r\n\r\n    //inBrowser\r\n    let inBrowser = typeof window !== 'undefined'\r\n    //console.log('inBrowser', inBrowser)\r\n\r\n\r\n    //MixWS\r\n    let MixWS\r\n    if (inBrowser) {\r\n        MixWS = window.WebSocket //use browser websocket\r\n    }\r\n    else {\r\n        MixWS = WS //use nodejs ws\r\n    }\r\n\r\n\r\n    //WebSocket, 網址傳token參數作為識別使用者\r\n    try {\r\n        wsc = new MixWS(opt.url + '/' + '?token=' + opt.token)\r\n    }\r\n    catch (err) {\r\n        return null\r\n    }\r\n\r\n\r\n    //bind\r\n    if (inBrowser) {\r\n        wsc.onopen = fOpen\r\n        wsc.onmessage = function(ev) {\r\n            let message = ev.data //瀏覽器端會被包至data\r\n            fMessage(message)\r\n        }\r\n        wsc.onclose = fClose\r\n        wsc.onerror = fError\r\n    }\r\n    else {\r\n        wsc.on('open', fOpen)\r\n        wsc.on('message', fMessage)\r\n        wsc.on('close', fClose)\r\n        wsc.on('error', fError)\r\n    }\r\n\r\n\r\n    //fOpen\r\n    function fOpen() {\r\n        if (isfun(opt.open)) {\r\n            opt.open()\r\n        }\r\n    }\r\n\r\n\r\n    //fClose\r\n    function fClose() {\r\n        if (isfun(opt.close)) {\r\n            opt.close()\r\n        }\r\n    }\r\n\r\n\r\n    //fMessage\r\n    function fMessage(data) {\r\n        if (isfun(opt.message)) {\r\n            opt.message(data)\r\n        }\r\n    }\r\n\r\n\r\n    //fError\r\n    function fError(err) {\r\n        if (isfun(opt.error)) {\r\n            opt.error(err)\r\n        }\r\n        wsc.close()\r\n    }\r\n\r\n\r\n    return wsc\r\n}\r\n\r\n\r\nexport default WWebsocketClient\r\n"],"names":["isfun","v","c","Object","prototype","toString","call","WWebsocketClient","opt","fOpen","open","fClose","close","fMessage","data","message","fError","err","error","wsc","url","token","MixWS","inBrowser","window","WebSocket","WS","onopen","onmessage","ev","onclose","onerror","on"],"mappings":";;;;0OAcA,QAASA,CAAAA,CAAT,CAAeC,CAAf,CAAkB,IAEVC,CAAAA,CAAC,CAAGC,MAAM,CAACC,SAAPD,CAAiBE,QAAjBF,CAA0BG,IAA1BH,CAA+BF,CAA/BE,QACK,mBAAND,GAAAA,CAAC,EAAkC,wBAANA,GAAAA,ECoCxC,QAASK,CAAAA,CAAT,CAA0BC,CAA1B,CAA+B,SAwDlBC,CAAAA,GAAQ,CACTT,CAAK,CAACQ,CAAG,CAACE,IAAL,CADI,EAETF,CAAG,CAACE,IAAJF,EA1DmB,SAgElBG,CAAAA,GAAS,CACVX,CAAK,CAACQ,CAAG,CAACI,KAAL,CADK,EAEVJ,CAAG,CAACI,KAAJJ,EAlEmB,SAwElBK,CAAAA,EAASC,EAAM,CAChBd,CAAK,CAACQ,CAAG,CAACO,OAAL,CADW,EAEhBP,CAAG,CAACO,OAAJP,CAAYM,CAAZN,CA1EmB,SAgFlBQ,CAAAA,EAAOC,EAAK,CACbjB,CAAK,CAACQ,CAAG,CAACU,KAAL,CADQ,EAEbV,CAAG,CAACU,KAAJV,CAAUS,CAAVT,CAFa,CAIjBW,CAAG,CAACP,KAAJO,MAnFAA,CAAAA,CAAG,CAAG,KAILX,CAAG,CAACY,GALkB,GAMvBZ,CAAG,CAACY,GAAJZ,CAAU,qBANa,EAQtBA,CAAG,CAACa,KARkB,GASvBb,CAAG,CAACa,KAAJb,CAAY,GATW,KAmBvBc,CAAAA,CAnBuB,CAcvBC,CAAS,CAAqB,WAAlB,QAAOC,CAAAA,MAdI,CAqBvBF,CArBuB,CAoBvBC,CApBuB,CAqBfC,MAAM,CAACC,SArBQ,CAwBfC,CAxBe,IA6BvB,CACAP,CAAG,CAAG,GAAIG,CAAAA,CAAJ,CAAUd,CAAG,CAACY,GAAJZ,YAA4BA,CAAG,CAACa,KAA1C,CADV,CAGA,MAAOJ,CAAP,CAAY,OACD,KAjCgB,OAsCvBM,CAAAA,GACAJ,CAAG,CAACQ,MAAJR,CAAaV,EACbU,CAAG,CAACS,SAAJT,CAAgB,SAASU,CAAT,CAAa,IACrBd,CAAAA,CAAO,CAAGc,CAAE,CAACf,KACjBD,CAAQ,CAACE,CAAD,CAFZ,EAIAI,CAAG,CAACW,OAAJX,CAAcR,EACdQ,CAAG,CAACY,OAAJZ,CAAcH,IAGdG,CAAG,CAACa,EAAJb,CAAO,MAAPA,CAAeV,CAAfU,EACAA,CAAG,CAACa,EAAJb,CAAO,SAAPA,CAAkBN,CAAlBM,EACAA,CAAG,CAACa,EAAJb,CAAO,OAAPA,CAAgBR,CAAhBQ,EACAA,CAAG,CAACa,EAAJb,CAAO,OAAPA,CAAgBH,CAAhBG,GAqCGA"}